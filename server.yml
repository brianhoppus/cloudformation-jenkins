Parameters:
  EnvironmentName:
    Description: Name that will be prefixed to resource names
    Type: String

  WebAppLaunchConfigDiskSize:
    Description: Disk size for the Web Applicaiton Launch Configuration
    Type: String
    Default: "10"

  WebAppGroupMinSize:
    Description: The minimum number of web servers
    Type: String
    Default: "1"

  WebAppGroupMaxSize:
    Description: The maximum number of web servers
    Type: String
    Default: "1"

  WebAppLaunchConfigInstanceType:
    Description: The size and type of server
    Type: String
    Default: "t2.small"

Resources:
  S3ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${EnvironmentName}-IAM-Role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"

  S3IAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${EnvironmentName}-IAM-Policy"
      PolicyName: root
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "s3:*"
            Resource: "*"
      Roles:
        - !Ref S3ReadOnlyRole

  WebServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref S3ReadOnlyRole

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update
          apt upgrade -y
          apt install default-jdk -y
          wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
          export APTREPO='/etc/apt/sources.list.d/jenkins.list'
          echo deb https://pkg.jenkins.io/debian-stable binary/ > $APTREPO
          apt update
          apt install jenkins -y
          systemctl start jenkins
          systemctl enable jenkins
      ImageId: ami-0f165346951da18c9
      SecurityGroups:
        - Ref: WebServerSecGroup
      IamInstanceProfile:
        Ref: "WebServerInstanceProfile"
      InstanceType: !Ref WebAppLaunchConfigInstanceType
      KeyName: udacity

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PUB1-SN"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: !Ref WebAppGroupMinSize
      MaxSize: !Ref WebAppGroupMaxSize

